@model IEnumerable<HOA.Models.Event>
@using System.Globalization

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "HOA - Events";
    var joinedEvents = ViewBag.JoinedEvents as HashSet<int> ?? new HashSet<int>();
}
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Events - HOA Management</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
    <link href="/css/site.css" rel="stylesheet" />
    <link href="https://fonts.googleapis.com/css2?family=Open+Sans&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">
</head>

<body>

    <header class="page-header">
        <h1>Upcoming Events</h1>
        <p>Join our community events and stay connected!</p>
    </header>


    <div class="container my-5">


        <div class="d-flex justify-content-between align-items-center mb-3 flex-wrap">

            <form method="get" asp-action="Index" class="input-group w-50">
                <input type="text" name="searchQuery" class="form-control" placeholder="Search by name..." value="@ViewData["SearchQuery"]" />
                <button class="btn btn-outline-secondary" type="submit">Search</button>
            </form>
            @if (User.IsInRole("Admin"))
            {
                <a class="btn btn-primary mt-2 mt-md-0" asp-action="Create">Add new event</a>
            }
        </div>

        <div class="row g-4">

            @foreach (var item in Model)
            {
                <div class="col-md-4">
                    <div class="card border mb-4">

                        @* =================================================== *@
                        @* AICI AM ADĂUGAT TAG-UL <img> PENTRU IMAGINEA EVENIMENTULUI *@
                        @* =================================================== *@
                        <img src="@item.ImagePath"
                             class="card-img-top"
                             alt="@item.EventName"
                             onerror="this.src='/images/default-image.jpg'"> @* Fallback la imaginea default *@
                        @* =================================================== *@


                        <div class="card-body">
                            <h5 class="card-title">@Html.DisplayFor(modelItem => item.EventName)</h5>
                            <p class="card-text">@Html.DisplayFor(modelItem => item.Description)</p>
                            <p class="card-text"><i class="bi bi-geo-alt"></i> Location: @Html.DisplayFor(modelItem => item.Location)</p>
                            <div class="d-flex justify-content-between align-items-center">
                                @if (User.IsInRole("Admin"))
                                {
                                    <a class="bi bi-pencil-square btn btn-sm btn-warning" asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                                }

                                <a class="bi-card-list btn-sm btn-info" asp-action="Details" asp-route-id="@item.Id">Details</a>

                                @if (User.IsInRole("Admin"))
                                {
                                    <a class="bi bi-trash btn btn-sm btn-danger" asp-action="Delete" asp-route-id="@item.Id">Delete</a>

                                }
                                <!-- Join/Unjoin Button -->
                                @{
                                    var isJoined = joinedEvents.Contains(item.Id);
                                }
                                <button type="button"
                                        class="btn btn-sm join-btn @(joinedEvents.Contains(item.Id) ? "btn-success" : "btn-outline-primary")"
                                        data-event-id="@item.Id"
                                        data-joined="@(joinedEvents.Contains(item.Id).ToString().ToLower())">
                                    @(joinedEvents.Contains(item.Id) ? "Joined!" : "Join")
                                </button>
                                <form class="anti-forgery-form" style="display:none;">
                                    @Html.AntiForgeryToken()
                                </form>

                                <!-- Show Participants Button -->
                                <a class="btn btn-sm btn-secondary" asp-action="Participants" asp-route-id="@item.Id">Show participants</a>

                                <span class="event-date">@item.Date.ToString("dd MMM - HH:mm")</span> @* Am corectat formatul datei aici, cred ca PPPP e ce voiai *@
                            </div>
                        </div>
                    </div>

                </div>
            }
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    @section Scripts {
        <script>
                       document.querySelectorAll('.join-btn').forEach(function (btn) {
                btn.addEventListener('click', function (e) {
                    e.preventDefault();
                    var eventId = this.getAttribute('data-event-id');

                    // Get anti-forgery token
                    var token = document.querySelector('.anti-forgery-form input[name="__RequestVerificationToken"]').value;

                    // Create FormData to send the request properly
                    var formData = new FormData();
                    formData.append('eventId', eventId);
                    formData.append('__RequestVerificationToken', token);

                    fetch('/Events/ToggleJoin', {
                        method: 'POST',
                        body: formData // Send as FormData instead of JSON
                    })
                    .then(response => {
                        if (!response.ok) {
                            throw new Error('Network response was not ok');
                        }
                        return response.json();
                    })
                    .then(data => {
                        console.log('Response:', data); // For debugging
                        if (data.joined) {
                            btn.classList.remove('btn-outline-primary');
                            btn.classList.add('btn-success');
                            btn.textContent = 'Joined!';
                            btn.setAttribute('data-joined', 'true');
                        } else {
                            btn.classList.remove('btn-success');
                            btn.classList.add('btn-outline-primary');
                            btn.textContent = 'Join';
                            btn.setAttribute('data-joined', 'false');
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        alert('An error occurred. Please try again.');
                    });
                });
            });
        </script>
    }

</body>

</html>